// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ollo/ons/v1beta1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgBuyName struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BidderAddr string `protobuf:"bytes,3,opt,name=bidderAddr,proto3" json:"bidderAddr,omitempty"`
	Bid        string `protobuf:"bytes,4,opt,name=bid,proto3" json:"bid,omitempty"`
}

func (m *MsgBuyName) Reset()         { *m = MsgBuyName{} }
func (m *MsgBuyName) String() string { return proto.CompactTextString(m) }
func (*MsgBuyName) ProtoMessage()    {}
func (*MsgBuyName) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{0}
}
func (m *MsgBuyName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyName.Merge(m, src)
}
func (m *MsgBuyName) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyName) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyName.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyName proto.InternalMessageInfo

func (m *MsgBuyName) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgBuyName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgBuyName) GetBidderAddr() string {
	if m != nil {
		return m.BidderAddr
	}
	return ""
}

func (m *MsgBuyName) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

type MsgEditNameParams struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value   string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Bid     string `protobuf:"bytes,4,opt,name=bid,proto3" json:"bid,omitempty"`
}

func (m *MsgEditNameParams) Reset()         { *m = MsgEditNameParams{} }
func (m *MsgEditNameParams) String() string { return proto.CompactTextString(m) }
func (*MsgEditNameParams) ProtoMessage()    {}
func (*MsgEditNameParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{1}
}
func (m *MsgEditNameParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEditNameParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEditNameParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEditNameParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditNameParams.Merge(m, src)
}
func (m *MsgEditNameParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgEditNameParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditNameParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditNameParams proto.InternalMessageInfo

func (m *MsgEditNameParams) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgEditNameParams) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgEditNameParams) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *MsgEditNameParams) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

type MsgEditNameParamsResponse struct {
}

func (m *MsgEditNameParamsResponse) Reset()         { *m = MsgEditNameParamsResponse{} }
func (m *MsgEditNameParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEditNameParamsResponse) ProtoMessage()    {}
func (*MsgEditNameParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{2}
}
func (m *MsgEditNameParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEditNameParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEditNameParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEditNameParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditNameParamsResponse.Merge(m, src)
}
func (m *MsgEditNameParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEditNameParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditNameParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditNameParamsResponse proto.InternalMessageInfo

type MsgBuyNameResponse struct {
}

func (m *MsgBuyNameResponse) Reset()         { *m = MsgBuyNameResponse{} }
func (m *MsgBuyNameResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBuyNameResponse) ProtoMessage()    {}
func (*MsgBuyNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{3}
}
func (m *MsgBuyNameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyNameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyNameResponse.Merge(m, src)
}
func (m *MsgBuyNameResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyNameResponse proto.InternalMessageInfo

type MsgSetOwnedName struct {
}

func (m *MsgSetOwnedName) Reset()         { *m = MsgSetOwnedName{} }
func (m *MsgSetOwnedName) String() string { return proto.CompactTextString(m) }
func (*MsgSetOwnedName) ProtoMessage()    {}
func (*MsgSetOwnedName) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{4}
}
func (m *MsgSetOwnedName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetOwnedName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetOwnedName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetOwnedName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetOwnedName.Merge(m, src)
}
func (m *MsgSetOwnedName) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetOwnedName) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetOwnedName.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetOwnedName proto.InternalMessageInfo

type MsgSetOwnedNameResponse struct {
}

func (m *MsgSetOwnedNameResponse) Reset()         { *m = MsgSetOwnedNameResponse{} }
func (m *MsgSetOwnedNameResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetOwnedNameResponse) ProtoMessage()    {}
func (*MsgSetOwnedNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{5}
}
func (m *MsgSetOwnedNameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetOwnedNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetOwnedNameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetOwnedNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetOwnedNameResponse.Merge(m, src)
}
func (m *MsgSetOwnedNameResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetOwnedNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetOwnedNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetOwnedNameResponse proto.InternalMessageInfo

type MsgEnableOwnedName struct {
}

func (m *MsgEnableOwnedName) Reset()         { *m = MsgEnableOwnedName{} }
func (m *MsgEnableOwnedName) String() string { return proto.CompactTextString(m) }
func (*MsgEnableOwnedName) ProtoMessage()    {}
func (*MsgEnableOwnedName) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{6}
}
func (m *MsgEnableOwnedName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEnableOwnedName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEnableOwnedName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEnableOwnedName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEnableOwnedName.Merge(m, src)
}
func (m *MsgEnableOwnedName) XXX_Size() int {
	return m.Size()
}
func (m *MsgEnableOwnedName) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEnableOwnedName.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEnableOwnedName proto.InternalMessageInfo

type MsgDisableOwnedName struct {
}

func (m *MsgDisableOwnedName) Reset()         { *m = MsgDisableOwnedName{} }
func (m *MsgDisableOwnedName) String() string { return proto.CompactTextString(m) }
func (*MsgDisableOwnedName) ProtoMessage()    {}
func (*MsgDisableOwnedName) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{7}
}
func (m *MsgDisableOwnedName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDisableOwnedName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDisableOwnedName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDisableOwnedName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDisableOwnedName.Merge(m, src)
}
func (m *MsgDisableOwnedName) XXX_Size() int {
	return m.Size()
}
func (m *MsgDisableOwnedName) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDisableOwnedName.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDisableOwnedName proto.InternalMessageInfo

type MsgLoanOwnedName struct {
}

func (m *MsgLoanOwnedName) Reset()         { *m = MsgLoanOwnedName{} }
func (m *MsgLoanOwnedName) String() string { return proto.CompactTextString(m) }
func (*MsgLoanOwnedName) ProtoMessage()    {}
func (*MsgLoanOwnedName) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{8}
}
func (m *MsgLoanOwnedName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLoanOwnedName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLoanOwnedName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLoanOwnedName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLoanOwnedName.Merge(m, src)
}
func (m *MsgLoanOwnedName) XXX_Size() int {
	return m.Size()
}
func (m *MsgLoanOwnedName) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLoanOwnedName.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLoanOwnedName proto.InternalMessageInfo

type MsgGiveOwnedNameResponse struct {
}

func (m *MsgGiveOwnedNameResponse) Reset()         { *m = MsgGiveOwnedNameResponse{} }
func (m *MsgGiveOwnedNameResponse) String() string { return proto.CompactTextString(m) }
func (*MsgGiveOwnedNameResponse) ProtoMessage()    {}
func (*MsgGiveOwnedNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{9}
}
func (m *MsgGiveOwnedNameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGiveOwnedNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGiveOwnedNameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGiveOwnedNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGiveOwnedNameResponse.Merge(m, src)
}
func (m *MsgGiveOwnedNameResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgGiveOwnedNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGiveOwnedNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGiveOwnedNameResponse proto.InternalMessageInfo

type MsgGiveOwnedName struct {
}

func (m *MsgGiveOwnedName) Reset()         { *m = MsgGiveOwnedName{} }
func (m *MsgGiveOwnedName) String() string { return proto.CompactTextString(m) }
func (*MsgGiveOwnedName) ProtoMessage()    {}
func (*MsgGiveOwnedName) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{10}
}
func (m *MsgGiveOwnedName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGiveOwnedName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGiveOwnedName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGiveOwnedName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGiveOwnedName.Merge(m, src)
}
func (m *MsgGiveOwnedName) XXX_Size() int {
	return m.Size()
}
func (m *MsgGiveOwnedName) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGiveOwnedName.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGiveOwnedName proto.InternalMessageInfo

type MsgLoanOwnedNameResponse struct {
}

func (m *MsgLoanOwnedNameResponse) Reset()         { *m = MsgLoanOwnedNameResponse{} }
func (m *MsgLoanOwnedNameResponse) String() string { return proto.CompactTextString(m) }
func (*MsgLoanOwnedNameResponse) ProtoMessage()    {}
func (*MsgLoanOwnedNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{11}
}
func (m *MsgLoanOwnedNameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLoanOwnedNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLoanOwnedNameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLoanOwnedNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLoanOwnedNameResponse.Merge(m, src)
}
func (m *MsgLoanOwnedNameResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgLoanOwnedNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLoanOwnedNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLoanOwnedNameResponse proto.InternalMessageInfo

type MsgEnableOwnedNameResponse struct {
}

func (m *MsgEnableOwnedNameResponse) Reset()         { *m = MsgEnableOwnedNameResponse{} }
func (m *MsgEnableOwnedNameResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEnableOwnedNameResponse) ProtoMessage()    {}
func (*MsgEnableOwnedNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{12}
}
func (m *MsgEnableOwnedNameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEnableOwnedNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEnableOwnedNameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEnableOwnedNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEnableOwnedNameResponse.Merge(m, src)
}
func (m *MsgEnableOwnedNameResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEnableOwnedNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEnableOwnedNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEnableOwnedNameResponse proto.InternalMessageInfo

type MsgDisableOwnedNameResponse struct {
}

func (m *MsgDisableOwnedNameResponse) Reset()         { *m = MsgDisableOwnedNameResponse{} }
func (m *MsgDisableOwnedNameResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDisableOwnedNameResponse) ProtoMessage()    {}
func (*MsgDisableOwnedNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{13}
}
func (m *MsgDisableOwnedNameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDisableOwnedNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDisableOwnedNameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDisableOwnedNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDisableOwnedNameResponse.Merge(m, src)
}
func (m *MsgDisableOwnedNameResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDisableOwnedNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDisableOwnedNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDisableOwnedNameResponse proto.InternalMessageInfo

type MsgFollow struct {
}

func (m *MsgFollow) Reset()         { *m = MsgFollow{} }
func (m *MsgFollow) String() string { return proto.CompactTextString(m) }
func (*MsgFollow) ProtoMessage()    {}
func (*MsgFollow) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{14}
}
func (m *MsgFollow) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFollow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFollow.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFollow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFollow.Merge(m, src)
}
func (m *MsgFollow) XXX_Size() int {
	return m.Size()
}
func (m *MsgFollow) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFollow.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFollow proto.InternalMessageInfo

type MsgFollowResponse struct {
}

func (m *MsgFollowResponse) Reset()         { *m = MsgFollowResponse{} }
func (m *MsgFollowResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFollowResponse) ProtoMessage()    {}
func (*MsgFollowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{15}
}
func (m *MsgFollowResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFollowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFollowResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFollowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFollowResponse.Merge(m, src)
}
func (m *MsgFollowResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFollowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFollowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFollowResponse proto.InternalMessageInfo

type MsgTagName struct {
}

func (m *MsgTagName) Reset()         { *m = MsgTagName{} }
func (m *MsgTagName) String() string { return proto.CompactTextString(m) }
func (*MsgTagName) ProtoMessage()    {}
func (*MsgTagName) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{16}
}
func (m *MsgTagName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTagName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTagName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTagName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTagName.Merge(m, src)
}
func (m *MsgTagName) XXX_Size() int {
	return m.Size()
}
func (m *MsgTagName) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTagName.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTagName proto.InternalMessageInfo

type MsgTagNameResponse struct {
}

func (m *MsgTagNameResponse) Reset()         { *m = MsgTagNameResponse{} }
func (m *MsgTagNameResponse) String() string { return proto.CompactTextString(m) }
func (*MsgTagNameResponse) ProtoMessage()    {}
func (*MsgTagNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{17}
}
func (m *MsgTagNameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTagNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTagNameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTagNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTagNameResponse.Merge(m, src)
}
func (m *MsgTagNameResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgTagNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTagNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTagNameResponse proto.InternalMessageInfo

type MsgMute struct {
}

func (m *MsgMute) Reset()         { *m = MsgMute{} }
func (m *MsgMute) String() string { return proto.CompactTextString(m) }
func (*MsgMute) ProtoMessage()    {}
func (*MsgMute) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{18}
}
func (m *MsgMute) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMute.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMute.Merge(m, src)
}
func (m *MsgMute) XXX_Size() int {
	return m.Size()
}
func (m *MsgMute) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMute.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMute proto.InternalMessageInfo

type MsgMuteResponse struct {
}

func (m *MsgMuteResponse) Reset()         { *m = MsgMuteResponse{} }
func (m *MsgMuteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMuteResponse) ProtoMessage()    {}
func (*MsgMuteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{19}
}
func (m *MsgMuteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMuteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMuteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMuteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMuteResponse.Merge(m, src)
}
func (m *MsgMuteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMuteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMuteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMuteResponse proto.InternalMessageInfo

type MsgReplyToThreadMessage struct {
}

func (m *MsgReplyToThreadMessage) Reset()         { *m = MsgReplyToThreadMessage{} }
func (m *MsgReplyToThreadMessage) String() string { return proto.CompactTextString(m) }
func (*MsgReplyToThreadMessage) ProtoMessage()    {}
func (*MsgReplyToThreadMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{20}
}
func (m *MsgReplyToThreadMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReplyToThreadMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReplyToThreadMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReplyToThreadMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReplyToThreadMessage.Merge(m, src)
}
func (m *MsgReplyToThreadMessage) XXX_Size() int {
	return m.Size()
}
func (m *MsgReplyToThreadMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReplyToThreadMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReplyToThreadMessage proto.InternalMessageInfo

type MsgReplyToThreadMessageResponse struct {
}

func (m *MsgReplyToThreadMessageResponse) Reset()         { *m = MsgReplyToThreadMessageResponse{} }
func (m *MsgReplyToThreadMessageResponse) String() string { return proto.CompactTextString(m) }
func (*MsgReplyToThreadMessageResponse) ProtoMessage()    {}
func (*MsgReplyToThreadMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{21}
}
func (m *MsgReplyToThreadMessageResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReplyToThreadMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReplyToThreadMessageResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReplyToThreadMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReplyToThreadMessageResponse.Merge(m, src)
}
func (m *MsgReplyToThreadMessageResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgReplyToThreadMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReplyToThreadMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReplyToThreadMessageResponse proto.InternalMessageInfo

type MsgFollowTrades struct {
}

func (m *MsgFollowTrades) Reset()         { *m = MsgFollowTrades{} }
func (m *MsgFollowTrades) String() string { return proto.CompactTextString(m) }
func (*MsgFollowTrades) ProtoMessage()    {}
func (*MsgFollowTrades) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{22}
}
func (m *MsgFollowTrades) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFollowTrades) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFollowTrades.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFollowTrades) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFollowTrades.Merge(m, src)
}
func (m *MsgFollowTrades) XXX_Size() int {
	return m.Size()
}
func (m *MsgFollowTrades) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFollowTrades.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFollowTrades proto.InternalMessageInfo

type MsgFollowTradesResponse struct {
}

func (m *MsgFollowTradesResponse) Reset()         { *m = MsgFollowTradesResponse{} }
func (m *MsgFollowTradesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFollowTradesResponse) ProtoMessage()    {}
func (*MsgFollowTradesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{23}
}
func (m *MsgFollowTradesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFollowTradesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFollowTradesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFollowTradesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFollowTradesResponse.Merge(m, src)
}
func (m *MsgFollowTradesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFollowTradesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFollowTradesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFollowTradesResponse proto.InternalMessageInfo

type MsgMessage struct {
}

func (m *MsgMessage) Reset()         { *m = MsgMessage{} }
func (m *MsgMessage) String() string { return proto.CompactTextString(m) }
func (*MsgMessage) ProtoMessage()    {}
func (*MsgMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{24}
}
func (m *MsgMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMessage.Merge(m, src)
}
func (m *MsgMessage) XXX_Size() int {
	return m.Size()
}
func (m *MsgMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMessage proto.InternalMessageInfo

type MsgMessageResponse struct {
}

func (m *MsgMessageResponse) Reset()         { *m = MsgMessageResponse{} }
func (m *MsgMessageResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMessageResponse) ProtoMessage()    {}
func (*MsgMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{25}
}
func (m *MsgMessageResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMessageResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMessageResponse.Merge(m, src)
}
func (m *MsgMessageResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMessageResponse proto.InternalMessageInfo

type MsgSellName struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SellerAddr string `protobuf:"bytes,3,opt,name=sellerAddr,proto3" json:"sellerAddr,omitempty"`
	Offer      string `protobuf:"bytes,4,opt,name=offer,proto3" json:"offer,omitempty"`
}

func (m *MsgSellName) Reset()         { *m = MsgSellName{} }
func (m *MsgSellName) String() string { return proto.CompactTextString(m) }
func (*MsgSellName) ProtoMessage()    {}
func (*MsgSellName) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{26}
}
func (m *MsgSellName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSellName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSellName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSellName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSellName.Merge(m, src)
}
func (m *MsgSellName) XXX_Size() int {
	return m.Size()
}
func (m *MsgSellName) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSellName.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSellName proto.InternalMessageInfo

func (m *MsgSellName) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSellName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgSellName) GetSellerAddr() string {
	if m != nil {
		return m.SellerAddr
	}
	return ""
}

func (m *MsgSellName) GetOffer() string {
	if m != nil {
		return m.Offer
	}
	return ""
}

type MsgSellNameResponse struct {
}

func (m *MsgSellNameResponse) Reset()         { *m = MsgSellNameResponse{} }
func (m *MsgSellNameResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSellNameResponse) ProtoMessage()    {}
func (*MsgSellNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{27}
}
func (m *MsgSellNameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSellNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSellNameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSellNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSellNameResponse.Merge(m, src)
}
func (m *MsgSellNameResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSellNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSellNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSellNameResponse proto.InternalMessageInfo

type MsgSetName struct {
	CreatorAddr string `protobuf:"bytes,1,opt,name=creatorAddr,proto3" json:"creatorAddr,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value       string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *MsgSetName) Reset()         { *m = MsgSetName{} }
func (m *MsgSetName) String() string { return proto.CompactTextString(m) }
func (*MsgSetName) ProtoMessage()    {}
func (*MsgSetName) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{28}
}
func (m *MsgSetName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetName.Merge(m, src)
}
func (m *MsgSetName) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetName) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetName.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetName proto.InternalMessageInfo

func (m *MsgSetName) GetCreatorAddr() string {
	if m != nil {
		return m.CreatorAddr
	}
	return ""
}

func (m *MsgSetName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgSetName) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type MsgDeleteName struct {
	CreatorAddr string `protobuf:"bytes,1,opt,name=creatorAddr,proto3" json:"creatorAddr,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *MsgDeleteName) Reset()         { *m = MsgDeleteName{} }
func (m *MsgDeleteName) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteName) ProtoMessage()    {}
func (*MsgDeleteName) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{29}
}
func (m *MsgDeleteName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteName.Merge(m, src)
}
func (m *MsgDeleteName) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteName) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteName.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteName proto.InternalMessageInfo

func (m *MsgDeleteName) GetCreatorAddr() string {
	if m != nil {
		return m.CreatorAddr
	}
	return ""
}

func (m *MsgDeleteName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MsgDeleteNameResponse struct {
}

func (m *MsgDeleteNameResponse) Reset()         { *m = MsgDeleteNameResponse{} }
func (m *MsgDeleteNameResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteNameResponse) ProtoMessage()    {}
func (*MsgDeleteNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{30}
}
func (m *MsgDeleteNameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteNameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteNameResponse.Merge(m, src)
}
func (m *MsgDeleteNameResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteNameResponse proto.InternalMessageInfo

type MsgSetNameResponse struct {
}

func (m *MsgSetNameResponse) Reset()         { *m = MsgSetNameResponse{} }
func (m *MsgSetNameResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetNameResponse) ProtoMessage()    {}
func (*MsgSetNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{31}
}
func (m *MsgSetNameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetNameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetNameResponse.Merge(m, src)
}
func (m *MsgSetNameResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetNameResponse proto.InternalMessageInfo

type MsgAddThread struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Thread  string `protobuf:"bytes,3,opt,name=thread,proto3" json:"thread,omitempty"`
	Addr    string `protobuf:"bytes,4,opt,name=addr,proto3" json:"addr,omitempty"`
	Offer   string `protobuf:"bytes,5,opt,name=offer,proto3" json:"offer,omitempty"`
}

func (m *MsgAddThread) Reset()         { *m = MsgAddThread{} }
func (m *MsgAddThread) String() string { return proto.CompactTextString(m) }
func (*MsgAddThread) ProtoMessage()    {}
func (*MsgAddThread) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{32}
}
func (m *MsgAddThread) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddThread) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddThread.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddThread) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddThread.Merge(m, src)
}
func (m *MsgAddThread) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddThread) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddThread.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddThread proto.InternalMessageInfo

func (m *MsgAddThread) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddThread) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgAddThread) GetThread() string {
	if m != nil {
		return m.Thread
	}
	return ""
}

func (m *MsgAddThread) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *MsgAddThread) GetOffer() string {
	if m != nil {
		return m.Offer
	}
	return ""
}

type MsgAddThreadResponse struct {
}

func (m *MsgAddThreadResponse) Reset()         { *m = MsgAddThreadResponse{} }
func (m *MsgAddThreadResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddThreadResponse) ProtoMessage()    {}
func (*MsgAddThreadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{33}
}
func (m *MsgAddThreadResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddThreadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddThreadResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddThreadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddThreadResponse.Merge(m, src)
}
func (m *MsgAddThreadResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddThreadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddThreadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddThreadResponse proto.InternalMessageInfo

type MsgDeleteThread struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Thread  string `protobuf:"bytes,3,opt,name=thread,proto3" json:"thread,omitempty"`
	Addr    string `protobuf:"bytes,4,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (m *MsgDeleteThread) Reset()         { *m = MsgDeleteThread{} }
func (m *MsgDeleteThread) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteThread) ProtoMessage()    {}
func (*MsgDeleteThread) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{34}
}
func (m *MsgDeleteThread) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteThread) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteThread.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteThread) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteThread.Merge(m, src)
}
func (m *MsgDeleteThread) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteThread) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteThread.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteThread proto.InternalMessageInfo

func (m *MsgDeleteThread) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteThread) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgDeleteThread) GetThread() string {
	if m != nil {
		return m.Thread
	}
	return ""
}

func (m *MsgDeleteThread) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type MsgDeleteThreadResponse struct {
}

func (m *MsgDeleteThreadResponse) Reset()         { *m = MsgDeleteThreadResponse{} }
func (m *MsgDeleteThreadResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteThreadResponse) ProtoMessage()    {}
func (*MsgDeleteThreadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4399c859ce33030f, []int{35}
}
func (m *MsgDeleteThreadResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteThreadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteThreadResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteThreadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteThreadResponse.Merge(m, src)
}
func (m *MsgDeleteThreadResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteThreadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteThreadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteThreadResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgBuyName)(nil), "ollo.ons.v1beta1.MsgBuyName")
	proto.RegisterType((*MsgEditNameParams)(nil), "ollo.ons.v1beta1.MsgEditNameParams")
	proto.RegisterType((*MsgEditNameParamsResponse)(nil), "ollo.ons.v1beta1.MsgEditNameParamsResponse")
	proto.RegisterType((*MsgBuyNameResponse)(nil), "ollo.ons.v1beta1.MsgBuyNameResponse")
	proto.RegisterType((*MsgSetOwnedName)(nil), "ollo.ons.v1beta1.MsgSetOwnedName")
	proto.RegisterType((*MsgSetOwnedNameResponse)(nil), "ollo.ons.v1beta1.MsgSetOwnedNameResponse")
	proto.RegisterType((*MsgEnableOwnedName)(nil), "ollo.ons.v1beta1.MsgEnableOwnedName")
	proto.RegisterType((*MsgDisableOwnedName)(nil), "ollo.ons.v1beta1.MsgDisableOwnedName")
	proto.RegisterType((*MsgLoanOwnedName)(nil), "ollo.ons.v1beta1.MsgLoanOwnedName")
	proto.RegisterType((*MsgGiveOwnedNameResponse)(nil), "ollo.ons.v1beta1.MsgGiveOwnedNameResponse")
	proto.RegisterType((*MsgGiveOwnedName)(nil), "ollo.ons.v1beta1.MsgGiveOwnedName")
	proto.RegisterType((*MsgLoanOwnedNameResponse)(nil), "ollo.ons.v1beta1.MsgLoanOwnedNameResponse")
	proto.RegisterType((*MsgEnableOwnedNameResponse)(nil), "ollo.ons.v1beta1.MsgEnableOwnedNameResponse")
	proto.RegisterType((*MsgDisableOwnedNameResponse)(nil), "ollo.ons.v1beta1.MsgDisableOwnedNameResponse")
	proto.RegisterType((*MsgFollow)(nil), "ollo.ons.v1beta1.MsgFollow")
	proto.RegisterType((*MsgFollowResponse)(nil), "ollo.ons.v1beta1.MsgFollowResponse")
	proto.RegisterType((*MsgTagName)(nil), "ollo.ons.v1beta1.MsgTagName")
	proto.RegisterType((*MsgTagNameResponse)(nil), "ollo.ons.v1beta1.MsgTagNameResponse")
	proto.RegisterType((*MsgMute)(nil), "ollo.ons.v1beta1.MsgMute")
	proto.RegisterType((*MsgMuteResponse)(nil), "ollo.ons.v1beta1.MsgMuteResponse")
	proto.RegisterType((*MsgReplyToThreadMessage)(nil), "ollo.ons.v1beta1.MsgReplyToThreadMessage")
	proto.RegisterType((*MsgReplyToThreadMessageResponse)(nil), "ollo.ons.v1beta1.MsgReplyToThreadMessageResponse")
	proto.RegisterType((*MsgFollowTrades)(nil), "ollo.ons.v1beta1.MsgFollowTrades")
	proto.RegisterType((*MsgFollowTradesResponse)(nil), "ollo.ons.v1beta1.MsgFollowTradesResponse")
	proto.RegisterType((*MsgMessage)(nil), "ollo.ons.v1beta1.MsgMessage")
	proto.RegisterType((*MsgMessageResponse)(nil), "ollo.ons.v1beta1.MsgMessageResponse")
	proto.RegisterType((*MsgSellName)(nil), "ollo.ons.v1beta1.MsgSellName")
	proto.RegisterType((*MsgSellNameResponse)(nil), "ollo.ons.v1beta1.MsgSellNameResponse")
	proto.RegisterType((*MsgSetName)(nil), "ollo.ons.v1beta1.MsgSetName")
	proto.RegisterType((*MsgDeleteName)(nil), "ollo.ons.v1beta1.MsgDeleteName")
	proto.RegisterType((*MsgDeleteNameResponse)(nil), "ollo.ons.v1beta1.MsgDeleteNameResponse")
	proto.RegisterType((*MsgSetNameResponse)(nil), "ollo.ons.v1beta1.MsgSetNameResponse")
	proto.RegisterType((*MsgAddThread)(nil), "ollo.ons.v1beta1.MsgAddThread")
	proto.RegisterType((*MsgAddThreadResponse)(nil), "ollo.ons.v1beta1.MsgAddThreadResponse")
	proto.RegisterType((*MsgDeleteThread)(nil), "ollo.ons.v1beta1.MsgDeleteThread")
	proto.RegisterType((*MsgDeleteThreadResponse)(nil), "ollo.ons.v1beta1.MsgDeleteThreadResponse")
}

func init() { proto.RegisterFile("ollo/ons/v1beta1/tx.proto", fileDescriptor_4399c859ce33030f) }

var fileDescriptor_4399c859ce33030f = []byte{
	// 789 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdd, 0x4e, 0xdb, 0x30,
	0x14, 0xa6, 0xe3, 0xa7, 0xeb, 0x81, 0x89, 0x62, 0x0a, 0xb4, 0x01, 0x02, 0xcd, 0xd8, 0x0f, 0xd3,
	0xd6, 0x8a, 0xed, 0x09, 0x40, 0xb0, 0x49, 0xd3, 0xbc, 0x21, 0xa8, 0xa6, 0x69, 0xda, 0x8d, 0xbb,
	0x98, 0x50, 0x2d, 0x24, 0x5d, 0x1c, 0xfe, 0x6e, 0xf6, 0x0c, 0x7b, 0x97, 0xbd, 0xc4, 0x2e, 0xb9,
	0xdc, 0xe5, 0x04, 0x2f, 0x32, 0xc5, 0x76, 0x9c, 0x34, 0x38, 0xa1, 0x20, 0xed, 0x2e, 0x3e, 0xdf,
	0xe7, 0xef, 0x1c, 0xdb, 0x9f, 0x8f, 0x03, 0x0d, 0xdf, 0x75, 0xfd, 0xb6, 0xef, 0xb1, 0xf6, 0xc9,
	0x46, 0x97, 0x86, 0x64, 0xa3, 0x1d, 0x9e, 0xb5, 0xfa, 0x81, 0x1f, 0xfa, 0xa8, 0x1a, 0x41, 0x2d,
	0xdf, 0x63, 0x2d, 0x09, 0x59, 0x2e, 0x00, 0x66, 0xce, 0xd6, 0xf1, 0xf9, 0x7b, 0x72, 0x44, 0x51,
	0x1d, 0xca, 0x5f, 0x03, 0x4a, 0x42, 0x3f, 0xa8, 0x97, 0x56, 0x4b, 0x4f, 0x2b, 0x7b, 0xf1, 0x10,
	0x21, 0x18, 0xf3, 0xc8, 0x11, 0xad, 0xdf, 0xe3, 0x61, 0xfe, 0x8d, 0x4c, 0x80, 0x6e, 0xcf, 0xb6,
	0x69, 0xb0, 0x69, 0xdb, 0x41, 0x7d, 0x94, 0x23, 0xa9, 0x08, 0xaa, 0xc2, 0x68, 0xb7, 0x67, 0xd7,
	0xc7, 0x38, 0x10, 0x7d, 0x5a, 0x3d, 0x98, 0xc1, 0xcc, 0xd9, 0xb1, 0x7b, 0x61, 0x94, 0x6e, 0x97,
	0x04, 0xe4, 0x88, 0xdd, 0x32, 0x69, 0x0d, 0xc6, 0x4f, 0x88, 0x7b, 0x4c, 0x65, 0x3e, 0x31, 0xd0,
	0xa4, 0x5a, 0x84, 0xc6, 0xb5, 0x54, 0x7b, 0x94, 0xf5, 0x7d, 0x8f, 0x51, 0xab, 0x06, 0x28, 0x59,
	0xb5, 0x8a, 0xce, 0xc0, 0x34, 0x66, 0xce, 0x3e, 0x0d, 0x3f, 0x9c, 0x7a, 0xd4, 0x8e, 0x20, 0xab,
	0x01, 0x0b, 0x99, 0x50, 0x46, 0x63, 0xc7, 0x23, 0x5d, 0x97, 0x26, 0x13, 0xe6, 0x60, 0x16, 0x33,
	0x67, 0xbb, 0xc7, 0x06, 0xc3, 0x08, 0xaa, 0x98, 0x39, 0xef, 0x7c, 0xe2, 0x25, 0x31, 0x03, 0xea,
	0x98, 0x39, 0x6f, 0x7a, 0x27, 0xf4, 0xba, 0xb8, 0xe0, 0x0f, 0x60, 0x92, 0x3f, 0xa0, 0xa1, 0xf8,
	0x4b, 0x60, 0x5c, 0x2f, 0x46, 0xa1, 0xcb, 0xb0, 0xa8, 0x29, 0x4a, 0xc1, 0x93, 0x50, 0xc1, 0xcc,
	0x79, 0x1d, 0x79, 0xe3, 0xd4, 0x9a, 0xe5, 0x47, 0x24, 0x06, 0x8a, 0x31, 0xc5, 0x5d, 0xd2, 0x21,
	0x0e, 0x2f, 0x44, 0xac, 0x5c, 0x8e, 0x14, 0xa7, 0x02, 0x65, 0xcc, 0x1c, 0x7c, 0x1c, 0xc6, 0x1b,
	0x19, 0x7d, 0x2a, 0x54, 0x6c, 0xe4, 0x1e, 0xed, 0xbb, 0xe7, 0x1d, 0xbf, 0x73, 0x18, 0x50, 0x62,
	0x63, 0xca, 0x18, 0x71, 0xa8, 0xd5, 0x84, 0x95, 0x1c, 0x28, 0x73, 0x32, 0xa2, 0xa8, 0x4e, 0x40,
	0x6c, 0xca, 0xa4, 0x60, 0x3a, 0x94, 0xa9, 0x36, 0x96, 0x17, 0xd5, 0x66, 0x15, 0xbf, 0xc3, 0x24,
	0x3f, 0x58, 0xd7, 0xbd, 0x9b, 0xf1, 0x19, 0x75, 0xdd, 0x41, 0xe3, 0x27, 0x91, 0xc8, 0xa3, 0xfe,
	0xc1, 0x01, 0x0d, 0xa4, 0x1f, 0xc5, 0x40, 0x5a, 0x23, 0x4e, 0xa9, 0x2a, 0xf9, 0xc4, 0xab, 0xdd,
	0xa7, 0xdc, 0xa7, 0x68, 0x15, 0x26, 0x65, 0x66, 0xae, 0x2d, 0x8a, 0x49, 0x87, 0x86, 0xbf, 0x14,
	0xd6, 0x0e, 0x3c, 0x88, 0x8e, 0x9d, 0xba, 0x34, 0xa4, 0x77, 0x17, 0xb7, 0x16, 0x60, 0x6e, 0x40,
	0x26, 0x73, 0x03, 0x64, 0xe5, 0x2a, 0xfa, 0x03, 0xa6, 0x30, 0x73, 0x36, 0x6d, 0x5b, 0x1c, 0xe5,
	0x2d, 0xb7, 0x76, 0x1e, 0x26, 0x42, 0x3e, 0x4f, 0x2e, 0x45, 0x8e, 0x22, 0x2e, 0x89, 0x6a, 0x16,
	0x3b, 0xca, 0xbf, 0x93, 0x6d, 0x1e, 0x4f, 0x6f, 0xf3, 0x3c, 0xd4, 0xd2, 0xf9, 0x55, 0x5d, 0xdf,
	0xb8, 0x87, 0xc4, 0x32, 0xfe, 0x77, 0x69, 0xd2, 0x9d, 0xe9, 0x64, 0x71, 0x1d, 0x2f, 0x7f, 0x01,
	0x8c, 0x62, 0xe6, 0x20, 0x0c, 0xe5, 0xb8, 0xed, 0x2e, 0xb5, 0xb2, 0x7d, 0xb9, 0x95, 0xb4, 0x27,
	0x63, 0xad, 0x08, 0x8d, 0x65, 0xd1, 0x2e, 0xdc, 0x57, 0x6e, 0x5e, 0xd6, 0xce, 0x88, 0x61, 0xe3,
	0x51, 0x21, 0xac, 0x14, 0x31, 0x94, 0x63, 0x57, 0x2e, 0xe5, 0xcc, 0x08, 0x0b, 0x0a, 0xcc, 0xf8,
	0x22, 0x92, 0x93, 0x2d, 0x23, 0x47, 0x4e, 0xa2, 0x39, 0x72, 0x99, 0x76, 0x83, 0xbe, 0xc0, 0x54,
	0xba, 0x2d, 0xa3, 0x66, 0x5e, 0x11, 0x8a, 0x62, 0xac, 0xdf, 0x48, 0x51, 0xea, 0x14, 0xa6, 0x33,
	0xcd, 0x14, 0xe9, 0xcb, 0xca, 0xb0, 0x8c, 0xe7, 0xc3, 0xb0, 0x54, 0x9a, 0x43, 0xa8, 0x66, 0xbb,
	0x32, 0xd2, 0x9f, 0x4e, 0x96, 0x66, 0xbc, 0x18, 0x8a, 0xa6, 0x32, 0x7d, 0x04, 0x48, 0x35, 0x82,
	0x15, 0xfd, 0x64, 0x45, 0x30, 0x9e, 0xdc, 0x40, 0x50, 0xba, 0xfb, 0x50, 0x49, 0xae, 0xba, 0xa9,
	0x9d, 0xa5, 0x70, 0xe3, 0x71, 0x31, 0xae, 0x44, 0x43, 0xa8, 0xe9, 0x9e, 0x03, 0xa4, 0x3f, 0x40,
	0x1d, 0xd5, 0xd8, 0x18, 0x9a, 0xaa, 0xb2, 0xbe, 0x85, 0x09, 0xf1, 0x9c, 0xa0, 0x45, 0xed, 0x64,
	0x01, 0x1a, 0x0f, 0x0b, 0xc0, 0xb4, 0x3b, 0xd3, 0x4f, 0x53, 0x8e, 0x3b, 0xd3, 0x94, 0x1c, 0x77,
	0xea, 0x1e, 0x38, 0xb4, 0x0d, 0x63, 0xd1, 0xe3, 0x8a, 0x1a, 0xda, 0x29, 0x11, 0x64, 0x34, 0x73,
	0xa1, 0xf4, 0x85, 0x8c, 0x37, 0x56, 0x7f, 0x21, 0xe3, 0xbd, 0x5c, 0x2b, 0x42, 0xd3, 0x4b, 0x1e,
	0x68, 0xae, 0xcd, 0x02, 0x0b, 0x49, 0x3f, 0xac, 0xdf, 0x48, 0x89, 0xd5, 0xb7, 0x9e, 0xfd, 0xbe,
	0x34, 0x4b, 0x17, 0x97, 0x66, 0xe9, 0xef, 0xa5, 0x59, 0xfa, 0x79, 0x65, 0x8e, 0x5c, 0x5c, 0x99,
	0x23, 0x7f, 0xae, 0xcc, 0x91, 0xcf, 0xfc, 0x9f, 0xb6, 0x7d, 0xc6, 0x7f, 0x78, 0xc3, 0xf3, 0x3e,
	0x65, 0xdd, 0x09, 0xfe, 0xb3, 0xfb, 0xea, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe6, 0x6a, 0x77,
	0xda, 0x09, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	BuyName(ctx context.Context, in *MsgBuyName, opts ...grpc.CallOption) (*MsgBuyNameResponse, error)
	SellName(ctx context.Context, in *MsgSellName, opts ...grpc.CallOption) (*MsgSellNameResponse, error)
	SetName(ctx context.Context, in *MsgSetName, opts ...grpc.CallOption) (*MsgSetNameResponse, error)
	TagName(ctx context.Context, in *MsgTagName, opts ...grpc.CallOption) (*MsgTagNameResponse, error)
	SetOwnedName(ctx context.Context, in *MsgSetOwnedName, opts ...grpc.CallOption) (*MsgSetOwnedNameResponse, error)
	EnableOwnedName(ctx context.Context, in *MsgEnableOwnedName, opts ...grpc.CallOption) (*MsgEnableOwnedNameResponse, error)
	DisableOwnedName(ctx context.Context, in *MsgDisableOwnedName, opts ...grpc.CallOption) (*MsgDisableOwnedNameResponse, error)
	DeleteName(ctx context.Context, in *MsgDeleteName, opts ...grpc.CallOption) (*MsgDeleteNameResponse, error)
	AddThread(ctx context.Context, in *MsgAddThread, opts ...grpc.CallOption) (*MsgAddThreadResponse, error)
	ReplyToThreadMessage(ctx context.Context, in *MsgReplyToThreadMessage, opts ...grpc.CallOption) (*MsgReplyToThreadMessageResponse, error)
	Follow(ctx context.Context, in *MsgFollow, opts ...grpc.CallOption) (*MsgFollowResponse, error)
	FollowTrades(ctx context.Context, in *MsgFollowTrades, opts ...grpc.CallOption) (*MsgFollowTradesResponse, error)
	Mute(ctx context.Context, in *MsgMute, opts ...grpc.CallOption) (*MsgMuteResponse, error)
	Message(ctx context.Context, in *MsgMessage, opts ...grpc.CallOption) (*MsgMessageResponse, error)
	DeleteThread(ctx context.Context, in *MsgDeleteThread, opts ...grpc.CallOption) (*MsgDeleteThreadResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) BuyName(ctx context.Context, in *MsgBuyName, opts ...grpc.CallOption) (*MsgBuyNameResponse, error) {
	out := new(MsgBuyNameResponse)
	err := c.cc.Invoke(ctx, "/ollo.ons.v1beta1.Msg/BuyName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SellName(ctx context.Context, in *MsgSellName, opts ...grpc.CallOption) (*MsgSellNameResponse, error) {
	out := new(MsgSellNameResponse)
	err := c.cc.Invoke(ctx, "/ollo.ons.v1beta1.Msg/SellName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetName(ctx context.Context, in *MsgSetName, opts ...grpc.CallOption) (*MsgSetNameResponse, error) {
	out := new(MsgSetNameResponse)
	err := c.cc.Invoke(ctx, "/ollo.ons.v1beta1.Msg/SetName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) TagName(ctx context.Context, in *MsgTagName, opts ...grpc.CallOption) (*MsgTagNameResponse, error) {
	out := new(MsgTagNameResponse)
	err := c.cc.Invoke(ctx, "/ollo.ons.v1beta1.Msg/TagName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetOwnedName(ctx context.Context, in *MsgSetOwnedName, opts ...grpc.CallOption) (*MsgSetOwnedNameResponse, error) {
	out := new(MsgSetOwnedNameResponse)
	err := c.cc.Invoke(ctx, "/ollo.ons.v1beta1.Msg/SetOwnedName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EnableOwnedName(ctx context.Context, in *MsgEnableOwnedName, opts ...grpc.CallOption) (*MsgEnableOwnedNameResponse, error) {
	out := new(MsgEnableOwnedNameResponse)
	err := c.cc.Invoke(ctx, "/ollo.ons.v1beta1.Msg/EnableOwnedName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DisableOwnedName(ctx context.Context, in *MsgDisableOwnedName, opts ...grpc.CallOption) (*MsgDisableOwnedNameResponse, error) {
	out := new(MsgDisableOwnedNameResponse)
	err := c.cc.Invoke(ctx, "/ollo.ons.v1beta1.Msg/DisableOwnedName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteName(ctx context.Context, in *MsgDeleteName, opts ...grpc.CallOption) (*MsgDeleteNameResponse, error) {
	out := new(MsgDeleteNameResponse)
	err := c.cc.Invoke(ctx, "/ollo.ons.v1beta1.Msg/DeleteName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddThread(ctx context.Context, in *MsgAddThread, opts ...grpc.CallOption) (*MsgAddThreadResponse, error) {
	out := new(MsgAddThreadResponse)
	err := c.cc.Invoke(ctx, "/ollo.ons.v1beta1.Msg/AddThread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ReplyToThreadMessage(ctx context.Context, in *MsgReplyToThreadMessage, opts ...grpc.CallOption) (*MsgReplyToThreadMessageResponse, error) {
	out := new(MsgReplyToThreadMessageResponse)
	err := c.cc.Invoke(ctx, "/ollo.ons.v1beta1.Msg/ReplyToThreadMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Follow(ctx context.Context, in *MsgFollow, opts ...grpc.CallOption) (*MsgFollowResponse, error) {
	out := new(MsgFollowResponse)
	err := c.cc.Invoke(ctx, "/ollo.ons.v1beta1.Msg/Follow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) FollowTrades(ctx context.Context, in *MsgFollowTrades, opts ...grpc.CallOption) (*MsgFollowTradesResponse, error) {
	out := new(MsgFollowTradesResponse)
	err := c.cc.Invoke(ctx, "/ollo.ons.v1beta1.Msg/FollowTrades", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Mute(ctx context.Context, in *MsgMute, opts ...grpc.CallOption) (*MsgMuteResponse, error) {
	out := new(MsgMuteResponse)
	err := c.cc.Invoke(ctx, "/ollo.ons.v1beta1.Msg/Mute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Message(ctx context.Context, in *MsgMessage, opts ...grpc.CallOption) (*MsgMessageResponse, error) {
	out := new(MsgMessageResponse)
	err := c.cc.Invoke(ctx, "/ollo.ons.v1beta1.Msg/Message", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteThread(ctx context.Context, in *MsgDeleteThread, opts ...grpc.CallOption) (*MsgDeleteThreadResponse, error) {
	out := new(MsgDeleteThreadResponse)
	err := c.cc.Invoke(ctx, "/ollo.ons.v1beta1.Msg/DeleteThread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	BuyName(context.Context, *MsgBuyName) (*MsgBuyNameResponse, error)
	SellName(context.Context, *MsgSellName) (*MsgSellNameResponse, error)
	SetName(context.Context, *MsgSetName) (*MsgSetNameResponse, error)
	TagName(context.Context, *MsgTagName) (*MsgTagNameResponse, error)
	SetOwnedName(context.Context, *MsgSetOwnedName) (*MsgSetOwnedNameResponse, error)
	EnableOwnedName(context.Context, *MsgEnableOwnedName) (*MsgEnableOwnedNameResponse, error)
	DisableOwnedName(context.Context, *MsgDisableOwnedName) (*MsgDisableOwnedNameResponse, error)
	DeleteName(context.Context, *MsgDeleteName) (*MsgDeleteNameResponse, error)
	AddThread(context.Context, *MsgAddThread) (*MsgAddThreadResponse, error)
	ReplyToThreadMessage(context.Context, *MsgReplyToThreadMessage) (*MsgReplyToThreadMessageResponse, error)
	Follow(context.Context, *MsgFollow) (*MsgFollowResponse, error)
	FollowTrades(context.Context, *MsgFollowTrades) (*MsgFollowTradesResponse, error)
	Mute(context.Context, *MsgMute) (*MsgMuteResponse, error)
	Message(context.Context, *MsgMessage) (*MsgMessageResponse, error)
	DeleteThread(context.Context, *MsgDeleteThread) (*MsgDeleteThreadResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) BuyName(ctx context.Context, req *MsgBuyName) (*MsgBuyNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyName not implemented")
}
func (*UnimplementedMsgServer) SellName(ctx context.Context, req *MsgSellName) (*MsgSellNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SellName not implemented")
}
func (*UnimplementedMsgServer) SetName(ctx context.Context, req *MsgSetName) (*MsgSetNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetName not implemented")
}
func (*UnimplementedMsgServer) TagName(ctx context.Context, req *MsgTagName) (*MsgTagNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TagName not implemented")
}
func (*UnimplementedMsgServer) SetOwnedName(ctx context.Context, req *MsgSetOwnedName) (*MsgSetOwnedNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetOwnedName not implemented")
}
func (*UnimplementedMsgServer) EnableOwnedName(ctx context.Context, req *MsgEnableOwnedName) (*MsgEnableOwnedNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnableOwnedName not implemented")
}
func (*UnimplementedMsgServer) DisableOwnedName(ctx context.Context, req *MsgDisableOwnedName) (*MsgDisableOwnedNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisableOwnedName not implemented")
}
func (*UnimplementedMsgServer) DeleteName(ctx context.Context, req *MsgDeleteName) (*MsgDeleteNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteName not implemented")
}
func (*UnimplementedMsgServer) AddThread(ctx context.Context, req *MsgAddThread) (*MsgAddThreadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddThread not implemented")
}
func (*UnimplementedMsgServer) ReplyToThreadMessage(ctx context.Context, req *MsgReplyToThreadMessage) (*MsgReplyToThreadMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplyToThreadMessage not implemented")
}
func (*UnimplementedMsgServer) Follow(ctx context.Context, req *MsgFollow) (*MsgFollowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Follow not implemented")
}
func (*UnimplementedMsgServer) FollowTrades(ctx context.Context, req *MsgFollowTrades) (*MsgFollowTradesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FollowTrades not implemented")
}
func (*UnimplementedMsgServer) Mute(ctx context.Context, req *MsgMute) (*MsgMuteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mute not implemented")
}
func (*UnimplementedMsgServer) Message(ctx context.Context, req *MsgMessage) (*MsgMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message not implemented")
}
func (*UnimplementedMsgServer) DeleteThread(ctx context.Context, req *MsgDeleteThread) (*MsgDeleteThreadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteThread not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_BuyName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBuyName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BuyName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ollo.ons.v1beta1.Msg/BuyName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BuyName(ctx, req.(*MsgBuyName))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SellName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSellName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SellName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ollo.ons.v1beta1.Msg/SellName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SellName(ctx, req.(*MsgSellName))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ollo.ons.v1beta1.Msg/SetName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetName(ctx, req.(*MsgSetName))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_TagName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgTagName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).TagName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ollo.ons.v1beta1.Msg/TagName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).TagName(ctx, req.(*MsgTagName))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetOwnedName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetOwnedName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetOwnedName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ollo.ons.v1beta1.Msg/SetOwnedName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetOwnedName(ctx, req.(*MsgSetOwnedName))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EnableOwnedName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEnableOwnedName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EnableOwnedName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ollo.ons.v1beta1.Msg/EnableOwnedName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EnableOwnedName(ctx, req.(*MsgEnableOwnedName))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DisableOwnedName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDisableOwnedName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DisableOwnedName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ollo.ons.v1beta1.Msg/DisableOwnedName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DisableOwnedName(ctx, req.(*MsgDisableOwnedName))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ollo.ons.v1beta1.Msg/DeleteName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteName(ctx, req.(*MsgDeleteName))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddThread_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddThread)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddThread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ollo.ons.v1beta1.Msg/AddThread",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddThread(ctx, req.(*MsgAddThread))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ReplyToThreadMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgReplyToThreadMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ReplyToThreadMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ollo.ons.v1beta1.Msg/ReplyToThreadMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ReplyToThreadMessage(ctx, req.(*MsgReplyToThreadMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Follow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFollow)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Follow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ollo.ons.v1beta1.Msg/Follow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Follow(ctx, req.(*MsgFollow))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_FollowTrades_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFollowTrades)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).FollowTrades(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ollo.ons.v1beta1.Msg/FollowTrades",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).FollowTrades(ctx, req.(*MsgFollowTrades))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Mute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMute)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Mute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ollo.ons.v1beta1.Msg/Mute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Mute(ctx, req.(*MsgMute))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Message_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Message(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ollo.ons.v1beta1.Msg/Message",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Message(ctx, req.(*MsgMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteThread_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteThread)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteThread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ollo.ons.v1beta1.Msg/DeleteThread",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteThread(ctx, req.(*MsgDeleteThread))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ollo.ons.v1beta1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BuyName",
			Handler:    _Msg_BuyName_Handler,
		},
		{
			MethodName: "SellName",
			Handler:    _Msg_SellName_Handler,
		},
		{
			MethodName: "SetName",
			Handler:    _Msg_SetName_Handler,
		},
		{
			MethodName: "TagName",
			Handler:    _Msg_TagName_Handler,
		},
		{
			MethodName: "SetOwnedName",
			Handler:    _Msg_SetOwnedName_Handler,
		},
		{
			MethodName: "EnableOwnedName",
			Handler:    _Msg_EnableOwnedName_Handler,
		},
		{
			MethodName: "DisableOwnedName",
			Handler:    _Msg_DisableOwnedName_Handler,
		},
		{
			MethodName: "DeleteName",
			Handler:    _Msg_DeleteName_Handler,
		},
		{
			MethodName: "AddThread",
			Handler:    _Msg_AddThread_Handler,
		},
		{
			MethodName: "ReplyToThreadMessage",
			Handler:    _Msg_ReplyToThreadMessage_Handler,
		},
		{
			MethodName: "Follow",
			Handler:    _Msg_Follow_Handler,
		},
		{
			MethodName: "FollowTrades",
			Handler:    _Msg_FollowTrades_Handler,
		},
		{
			MethodName: "Mute",
			Handler:    _Msg_Mute_Handler,
		},
		{
			MethodName: "Message",
			Handler:    _Msg_Message_Handler,
		},
		{
			MethodName: "DeleteThread",
			Handler:    _Msg_DeleteThread_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ollo/ons/v1beta1/tx.proto",
}

func (m *MsgBuyName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Bid) > 0 {
		i -= len(m.Bid)
		copy(dAtA[i:], m.Bid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Bid)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.BidderAddr) > 0 {
		i -= len(m.BidderAddr)
		copy(dAtA[i:], m.BidderAddr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BidderAddr)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEditNameParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEditNameParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEditNameParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Bid) > 0 {
		i -= len(m.Bid)
		copy(dAtA[i:], m.Bid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Bid)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEditNameParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEditNameParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEditNameParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgBuyNameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyNameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyNameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetOwnedName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetOwnedName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetOwnedName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetOwnedNameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetOwnedNameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetOwnedNameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgEnableOwnedName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEnableOwnedName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEnableOwnedName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDisableOwnedName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDisableOwnedName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDisableOwnedName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgLoanOwnedName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLoanOwnedName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLoanOwnedName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgGiveOwnedNameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGiveOwnedNameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGiveOwnedNameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgGiveOwnedName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGiveOwnedName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGiveOwnedName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgLoanOwnedNameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLoanOwnedNameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLoanOwnedNameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgEnableOwnedNameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEnableOwnedNameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEnableOwnedNameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDisableOwnedNameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDisableOwnedNameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDisableOwnedNameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFollow) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFollow) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFollow) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFollowResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFollowResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFollowResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgTagName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTagName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTagName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgTagNameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTagNameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTagNameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMute) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMute) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMute) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMuteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMuteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMuteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgReplyToThreadMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReplyToThreadMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReplyToThreadMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgReplyToThreadMessageResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReplyToThreadMessageResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReplyToThreadMessageResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFollowTrades) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFollowTrades) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFollowTrades) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFollowTradesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFollowTradesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFollowTradesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMessageResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMessageResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMessageResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSellName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSellName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSellName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Offer) > 0 {
		i -= len(m.Offer)
		copy(dAtA[i:], m.Offer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Offer)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.SellerAddr) > 0 {
		i -= len(m.SellerAddr)
		copy(dAtA[i:], m.SellerAddr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SellerAddr)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSellNameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSellNameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSellNameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.CreatorAddr) > 0 {
		i -= len(m.CreatorAddr)
		copy(dAtA[i:], m.CreatorAddr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CreatorAddr)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.CreatorAddr) > 0 {
		i -= len(m.CreatorAddr)
		copy(dAtA[i:], m.CreatorAddr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CreatorAddr)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteNameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteNameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteNameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetNameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetNameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetNameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddThread) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddThread) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddThread) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Offer) > 0 {
		i -= len(m.Offer)
		copy(dAtA[i:], m.Offer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Offer)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Addr) > 0 {
		i -= len(m.Addr)
		copy(dAtA[i:], m.Addr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Addr)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Thread) > 0 {
		i -= len(m.Thread)
		copy(dAtA[i:], m.Thread)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Thread)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddThreadResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddThreadResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddThreadResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteThread) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteThread) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteThread) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Addr) > 0 {
		i -= len(m.Addr)
		copy(dAtA[i:], m.Addr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Addr)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Thread) > 0 {
		i -= len(m.Thread)
		copy(dAtA[i:], m.Thread)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Thread)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteThreadResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteThreadResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteThreadResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgBuyName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BidderAddr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Bid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgEditNameParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Bid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgEditNameParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgBuyNameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetOwnedName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetOwnedNameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgEnableOwnedName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDisableOwnedName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgLoanOwnedName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgGiveOwnedNameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgGiveOwnedName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgLoanOwnedNameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgEnableOwnedNameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDisableOwnedNameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFollow) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFollowResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgTagName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgTagNameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMute) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMuteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgReplyToThreadMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgReplyToThreadMessageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFollowTrades) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFollowTradesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMessageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSellName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SellerAddr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Offer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSellNameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CreatorAddr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CreatorAddr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteNameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetNameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddThread) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Thread)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Addr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Offer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddThreadResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteThread) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Thread)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Addr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteThreadResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgBuyName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BidderAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BidderAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEditNameParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEditNameParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEditNameParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEditNameParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEditNameParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEditNameParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyNameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyNameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyNameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetOwnedName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetOwnedName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetOwnedName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetOwnedNameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetOwnedNameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetOwnedNameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEnableOwnedName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEnableOwnedName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEnableOwnedName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDisableOwnedName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDisableOwnedName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDisableOwnedName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLoanOwnedName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLoanOwnedName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLoanOwnedName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGiveOwnedNameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGiveOwnedNameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGiveOwnedNameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGiveOwnedName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGiveOwnedName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGiveOwnedName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLoanOwnedNameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLoanOwnedNameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLoanOwnedNameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEnableOwnedNameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEnableOwnedNameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEnableOwnedNameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDisableOwnedNameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDisableOwnedNameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDisableOwnedNameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFollow) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFollow: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFollow: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFollowResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFollowResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFollowResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTagName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTagName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTagName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTagNameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTagNameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTagNameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMute) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMute: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMute: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMuteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMuteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMuteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReplyToThreadMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReplyToThreadMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReplyToThreadMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReplyToThreadMessageResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReplyToThreadMessageResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReplyToThreadMessageResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFollowTrades) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFollowTrades: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFollowTrades: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFollowTradesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFollowTradesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFollowTradesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMessageResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMessageResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMessageResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSellName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSellName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSellName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SellerAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSellNameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSellNameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSellNameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteNameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteNameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteNameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetNameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetNameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetNameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddThread) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddThread: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddThread: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thread", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Thread = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Addr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Addr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddThreadResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddThreadResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddThreadResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteThread) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteThread: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteThread: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thread", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Thread = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Addr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Addr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteThreadResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteThreadResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteThreadResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)

// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ollo/loan/v1/loan.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Loan struct {
	Lender    string                                  `protobuf:"bytes,1,opt,name=lender,proto3" json:"lender,omitempty" yaml:"lender"`
	CreatedAt time.Time                               `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at"`
	AmountIn  github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,3,opt,name=amount_in,json=amountIn,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin" json:"amount_in" yaml:"amount_in"`
	asset_id  uint64                                  `protobuf:"varint,4,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty" yaml:"asset_id"`
}

func (m *Loan) Reset()         { *m = Loan{} }
func (m *Loan) String() string { return proto.CompactTextString(m) }
func (*Loan) ProtoMessage()    {}
func (*Loan) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3d138f888e151b0, []int{0}
}
func (m *Loan) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Loan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Loan.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Loan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Loan.Merge(m, src)
}
func (m *Loan) XXX_Size() int {
	return m.Size()
}
func (m *Loan) XXX_DiscardUnknown() {
	xxx_messageInfo_Loan.DiscardUnknown(m)
}

var xxx_messageInfo_Loan proto.InternalMessageInfo

func (m *Loan) GetLender() string {
	if m != nil {
		return m.Lender
	}
	return ""
}

func (m *Loan) GetCreatedAt() time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return time.Time{}
}

func (m *Loan) GetAmountIn() github_com_cosmos_cosmos_sdk_types.Coin {
	if m != nil {
		return m.AmountIn
	}
	return github_com_cosmos_cosmos_sdk_types.Coin{}
}

func (m *Loan) Getasset_id() uint64 {
	if m != nil {
		return m.asset_id
	}
	return 0
}

func init() {
	proto.RegisterType((*Loan)(nil), "ollo.loan.v1.Loan")
}

func init() { proto.RegisterFile("ollo/loan/v1/loan.proto", fileDescriptor_c3d138f888e151b0) }

var fileDescriptor_c3d138f888e151b0 = []byte{
	// 388 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x51, 0x3f, 0x8f, 0xd3, 0x30,
	0x14, 0x8f, 0x8f, 0xea, 0x68, 0x03, 0x08, 0x88, 0x4e, 0x22, 0xd7, 0x21, 0xae, 0xb2, 0x50, 0x84,
	0xce, 0x56, 0x60, 0xbb, 0xad, 0xe9, 0x74, 0x12, 0x53, 0x60, 0x62, 0x89, 0x9c, 0xc4, 0x84, 0x88,
	0xc4, 0xaf, 0x8a, 0xdd, 0x8a, 0x13, 0x5f, 0xa2, 0x1f, 0x86, 0xef, 0x40, 0xc7, 0x8a, 0x89, 0x29,
	0xa0, 0xf4, 0x1b, 0x74, 0x64, 0x3a, 0xc5, 0x76, 0x3b, 0xd9, 0xef, 0xf7, 0xfc, 0xfb, 0xe3, 0xf7,
	0xdc, 0x57, 0x50, 0xd7, 0x40, 0x6b, 0x60, 0x82, 0x6e, 0x22, 0x7d, 0x92, 0x55, 0x0b, 0x0a, 0xbc,
	0xa7, 0x43, 0x83, 0x68, 0x60, 0x13, 0x4d, 0xaf, 0x4a, 0x28, 0x41, 0x37, 0xe8, 0x70, 0x33, 0x6f,
	0xa6, 0xb8, 0x04, 0x28, 0x6b, 0x4e, 0x75, 0x95, 0xad, 0xbf, 0x50, 0x55, 0x35, 0x5c, 0x2a, 0xd6,
	0xac, 0xec, 0x83, 0xeb, 0x1c, 0x64, 0x03, 0x32, 0x35, 0x4c, 0x53, 0xd8, 0x56, 0x60, 0x2a, 0x9a,
	0x31, 0xc9, 0xe9, 0x26, 0xca, 0xb8, 0x62, 0x11, 0xcd, 0xa1, 0xb2, 0xfe, 0xe1, 0xaf, 0x0b, 0x77,
	0xf4, 0x01, 0x98, 0xf0, 0x16, 0xee, 0x65, 0xcd, 0x45, 0xc1, 0x5b, 0x1f, 0xcd, 0xd0, 0x7c, 0x12,
	0xbf, 0x39, 0x76, 0xf8, 0xd9, 0x3d, 0x6b, 0xea, 0xdb, 0xd0, 0xe0, 0xe1, 0xef, 0x9f, 0x37, 0x57,
	0x56, 0x7b, 0x51, 0x14, 0x2d, 0x97, 0xf2, 0xa3, 0x6a, 0x2b, 0x51, 0x26, 0x96, 0xe8, 0x2d, 0x5d,
	0x37, 0x6f, 0x39, 0x53, 0xbc, 0x48, 0x99, 0xf2, 0x2f, 0x66, 0x68, 0xfe, 0xe4, 0xdd, 0x94, 0x98,
	0xf0, 0xe4, 0x14, 0x9e, 0x7c, 0x3a, 0x85, 0x8f, 0xc7, 0xbb, 0x0e, 0x3b, 0xdb, 0xbf, 0x18, 0x25,
	0x13, 0xcb, 0x5b, 0x28, 0xef, 0x87, 0x3b, 0x61, 0x0d, 0xac, 0x85, 0x4a, 0x2b, 0xe1, 0x3f, 0xd2,
	0x1a, 0xd7, 0xc4, 0xda, 0x0e, 0x9f, 0x20, 0xf6, 0x13, 0x64, 0x09, 0x95, 0x88, 0x97, 0x83, 0xc4,
	0xb1, 0xc3, 0x2f, 0x4c, 0xd2, 0x33, 0x33, 0xfc, 0xdf, 0xe1, 0xd7, 0x65, 0xa5, 0xbe, 0xae, 0x33,
	0x92, 0x43, 0x63, 0x67, 0x62, 0x8f, 0x1b, 0x59, 0x7c, 0xa3, 0xea, 0x7e, 0xc5, 0xa5, 0x16, 0x49,
	0xc6, 0x86, 0x76, 0x27, 0xbc, 0x5b, 0x77, 0xcc, 0xa4, 0xe4, 0x2a, 0xad, 0x0a, 0x7f, 0x34, 0x43,
	0xf3, 0x51, 0x8c, 0xfb, 0x0e, 0x9f, 0xb1, 0x63, 0x87, 0x9f, 0x5b, 0x23, 0x8b, 0x84, 0xc9, 0x63,
	0x7d, 0xbd, 0x2b, 0xe2, 0xb7, 0xbb, 0x3e, 0x40, 0xfb, 0x3e, 0x40, 0xff, 0xfa, 0x00, 0x6d, 0x0f,
	0x81, 0xb3, 0x3f, 0x04, 0xce, 0x9f, 0x43, 0xe0, 0x7c, 0x7e, 0xa9, 0x97, 0xff, 0xdd, 0xac, 0x5f,
	0xfb, 0x66, 0x97, 0x7a, 0x1c, 0xef, 0x1f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x0b, 0xf7, 0x26, 0xc3,
	0x18, 0x02, 0x00, 0x00,
}

func (m *Loan) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Loan) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Loan) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.asset_id != 0 {
		i = encodeVarintLoan(dAtA, i, uint64(m.asset_id))
		i--
		dAtA[i] = 0x20
	}
	{
		size, err := m.AmountIn.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintLoan(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintLoan(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x12
	if len(m.Lender) > 0 {
		i -= len(m.Lender)
		copy(dAtA[i:], m.Lender)
		i = encodeVarintLoan(dAtA, i, uint64(len(m.Lender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintLoan(dAtA []byte, offset int, v uint64) int {
	offset -= sovLoan(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Loan) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Lender)
	if l > 0 {
		n += 1 + l + sovLoan(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt)
	n += 1 + l + sovLoan(uint64(l))
	l = m.AmountIn.Size()
	n += 1 + l + sovLoan(uint64(l))
	if m.asset_id != 0 {
		n += 1 + sovLoan(uint64(m.asset_id))
	}
	return n
}

func sovLoan(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozLoan(x uint64) (n int) {
	return sovLoan(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Loan) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLoan
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Loan: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Loan: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLoan
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLoan
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLoan
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Lender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLoan
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLoan
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLoan
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmountIn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLoan
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLoan
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLoan
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AmountIn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field asset_id", wireType)
			}
			m.asset_id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLoan
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.asset_id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipLoan(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLoan
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipLoan(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowLoan
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLoan
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLoan
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthLoan
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupLoan
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthLoan
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthLoan        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowLoan          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupLoan = fmt.Errorf("proto: unexpected end of group")
)

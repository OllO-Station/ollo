syntax = "proto3";
package ollo.ons.v1beta1;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "ollo/x/ons/types";

// Msg defines the Msg service.
service Msg {
  rpc BuyName(MsgBuyName) returns (MsgBuyNameResponse);
  rpc SellName(MsgSellName) returns (MsgSellNameResponse);
  rpc SetName(MsgSetName) returns (MsgSetNameResponse);
  rpc TagName(MsgTagName) returns (MsgTagNameResponse);
  rpc SetOwnedName(MsgSetOwnedName) returns (MsgSetOwnedNameResponse);
  rpc EnableOwnedName(MsgEnableOwnedName) returns (MsgEnableOwnedNameResponse);
  rpc DisableOwnedName(MsgDisableOwnedName) returns (MsgDisableOwnedNameResponse);
  rpc DeleteName(MsgDeleteName) returns (MsgDeleteNameResponse);
  rpc AddThread(MsgAddThread) returns (MsgAddThreadResponse);
  rpc ReplyToThreadMessage(MsgReplyToThreadMessage) returns (MsgReplyToThreadMessageResponse);
  rpc Follow(MsgFollow) returns (MsgFollowResponse);
  rpc FollowTrades(MsgFollowTrades) returns (MsgFollowTradesResponse);
  rpc Mute(MsgMute) returns (MsgMuteResponse);
  rpc Message(MsgMessage) returns (MsgMessageResponse);
  rpc DeleteThread(MsgDeleteThread) returns (MsgDeleteThreadResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgBuyName {
  string creator = 1;
  string name = 2;
  string bidderAddr = 3;
  string bid = 4;
}
message MsgEditNameParams {
  string creator = 1;
  string name = 2;
  string value = 3;
  string bid = 4;
}
message MsgEditNameParamsResponse {
}

message MsgBuyNameResponse {
}
message MsgSetOwnedName {
}
message MsgSetOwnedNameResponse {
}
message MsgEnableOwnedName {
}
message MsgDisableOwnedName {
}
message MsgLoanOwnedName {
}
message MsgGiveOwnedNameResponse {
}
message MsgGiveOwnedName {
}
message MsgLoanOwnedNameResponse {
}
message MsgEnableOwnedNameResponse {
}
message MsgDisableOwnedNameResponse {
}
message MsgFollow {
}
message MsgFollowResponse {
}
message MsgTagName {
}
message MsgTagNameResponse {
}
message MsgMute {
}
message MsgMuteResponse {
}
message MsgReplyToThreadMessage {
}
message MsgReplyToThreadMessageResponse {
}
message MsgFollowTrades {
}
message MsgFollowTradesResponse {
}
message MsgMessage {
}
message MsgMessageResponse {
}

message MsgSellName {
  string creator = 1;
  string name = 2;
  string sellerAddr = 3;
  string offer = 4;
}

message MsgSellNameResponse {
}

message MsgSetName {
  string creatorAddr = 1;
  string name = 2;
  string value = 3;
}

message MsgDeleteName {
  string creatorAddr=  1;
  string name = 2;
}

message MsgDeleteNameResponse {
}
message MsgSetNameResponse {
}

message MsgAddThread {
  string creator = 1;
  string name = 2;
  string thread = 3;
  string addr = 4;
  string offer = 5;
}

message MsgAddThreadResponse {
}

message MsgDeleteThread {
  string creator = 1;
  string name = 2;
  string thread = 3;
  string addr = 4;
}

message MsgDeleteThreadResponse {
}

// this line is used by starport scaffolding # proto/tx/message

syntax = "proto3";
package ollo.intertx;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "ollo/x/intertx/types";


// this line is used by starport scaffolding # proto/tx/message




// Query defines the gRPC querier service.




// Msg defines the intertx Msg service.
service Msg {
  // Register defines a rpc handler for MsgRegisterAccount
  rpc RegisterAccount(MsgRegisterAccount) returns (MsgRegisterAccountResponse);
  // SubmitTx defines a rpc handler for MsgSubmitTx
  rpc SubmitTx(MsgSubmitTx) returns (MsgSubmitTxResponse);
}

// MsgRegisterAccount defines the payload for Msg/RegisterAccount
message MsgRegisterAccount {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string owner                      = 1;
  string connection_id              = 2 [(gogoproto.moretags) = "yaml:\"connection_id\""];
}

// MsgRegisterAccountResponse defines the response for Msg/RegisterAccount
message MsgRegisterAccountResponse {}

// MsgSubmitTx defines the payload for Msg/SubmitTx
message MsgSubmitTx {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string owner                       = 1;
  string connection_id = 2 [(gogoproto.moretags) = "yaml:\"connection_id\""];
  google.protobuf.Any msg            = 3;
}

// MsgSubmitTxResponse defines the response for Msg/SubmitTx
message MsgSubmitTxResponse {}

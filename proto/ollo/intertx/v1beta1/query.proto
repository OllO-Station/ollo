syntax = "proto3";
package ollo.intertx;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "ollo/intertx/params.proto";
// this line is used by starport scaffolding # 1

option go_package = "ollo/x/intertx/types";

// this line is used by starport scaffolding # 3
service Query {
  // QueryInterchainAccountFromAddress returns the interchain account for given owner address on a given connection pair
  rpc InterchainAccountFromAddress(QueryInterchainAccountFromAddressRequest) returns (QueryInterchainAccountFromAddressResponse);
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/ollo/intertx/params";
  }
}

// QueryInterchainAccountFromAddressRequest is the request type for the Query/InterchainAccountAddress RPC
message QueryInterchainAccountFromAddressRequest {
  string owner                      = 1;
  string connection_id = 2 [(gogoproto.moretags) = "yaml:\"connection_id\""];
}

// QueryInterchainAccountFromAddressResponse the response type for the Query/InterchainAccountAddress RPC
message QueryInterchainAccountFromAddressResponse {
  string interchain_account_address = 1 [(gogoproto.moretags) = "yaml:\"interchain_account_address\""];
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}


syntax = "proto3";
package ollo.incentive.v1;

import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "ollo/incentive/v1/mm.proto";

option go_package = "github.com/ollo-station/ollo/x/incentive/types";
option (gogoproto.goproto_getters_all) = false;

//
message Incentive {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    // 
    string address = 1 [
      (gogoproto.moretags) = "yaml:\"address\"",
      (cosmos_proto.scalar) = "cosmos.AddressString"
    ];

    //
    repeated cosmos.base.v1beta1.Coin claimable = 2 [
      (gogoproto.nullable) = false,
      (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
      (gogoproto.moretags) = "yaml:\"claimable\""
    ];
}

//
message IncentiveProps {
  option (gogoproto.goproto_getters) = false;

  //
  string min_open_ratio = 1 [
    (gogoproto.moretags)   = "yaml:\"min_open_ratio\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];

  //
  string min_open_depth_ratio = 2 [
    (gogoproto.moretags)   = "yaml:\"min_open_ratio\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];

  //
  uint32 max_downtime = 3 [
    (gogoproto.moretags) = "yaml:\"max_downtime\""
  ];

  //
  uint32 max_total_downtime = 4 [
    (gogoproto.moretags) = "yaml:\"max_total_downtime\""
  ];

  //
  uint32 min_hours = 5 [
    (gogoproto.moretags) = "yaml:\"min_hours\""
  ];

  //
  uint32 min_days= 6 [
    (gogoproto.moretags) = "yaml:\"min_days\""
  ];
}

//
message IncentivePair {
    option (gogoproto.equal) = false;

    //
    uint64 pair_id = 1 [
      (gogoproto.moretags) = "yaml:\"pair_id\""
    ];

    //
    google.protobuf.Timestamp updated_at = 2 [
      (gogoproto.stdtime) = true,
      (gogoproto.moretags) = "yaml:\"updated_at\""
    ];

    //
    string incentive_weight = 3 [
      (gogoproto.nullable) = false,
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
      (gogoproto.moretags) = "yaml:\"incentive_weight\""
    ];

    //
    string max_spread = 4 [
      (gogoproto.nullable) = false,
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
      (gogoproto.moretags) = "yaml:\"max_spread\""
    ];

    //
    string min_spread = 5 [
      (gogoproto.nullable) = false,
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
      (gogoproto.moretags) = "yaml:\"max_spread\""
    ];

    //
    string min_depth= 6 [
      (gogoproto.nullable) = false,
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
      (gogoproto.moretags) = "yaml:\"max_spread\""
    ];
  }

message IncentiveDistribution {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  //
  string address = 1 [
    (gogoproto.moretags) = "yaml:\"address\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];

  //
  uint64 pair_id = 2 [
    (gogoproto.moretags) = "yaml:\"pair_id\""
  ];

  repeated cosmos.base.v1beta1.Coin amount = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.moretags) = "yaml:\"amount\""
  ];
}

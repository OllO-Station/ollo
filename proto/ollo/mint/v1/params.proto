syntax = "proto3";
package ollo.mint.v1;

import "gogoproto/gogo.proto";
import "ollo/mint/v1/mint.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "ollo/x/mint/types";


// Params holds parameters for the mint module.
message Params {
  option (gogoproto.goproto_stringer) = false;

  // type of coin to mint
  string mint_denom = 1;
  // maximum annual change in inflation rate
  string inflation_rate_change = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (cosmos_proto.scalar) = "cosmos.Dec"
  ];
  // maximum inflation rate
  string inflation_max = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (cosmos_proto.scalar) = "cosmos.Dec"
  ];
  // minimum inflation rate
  string inflation_min = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (cosmos_proto.scalar) = "cosmos.Dec"
  ];
  // goal of percent bonded coins
  string goal_bonded = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (cosmos_proto.scalar) = "cosmos.Dec"
  ];
  // expected blocks per year
  uint64 blocks_per_year = 6;
  // distribution_proportions defines the proportion of the minted denom
  ollo.mint.v1.DistributionProportions distribution_proportions = 7
      [ (gogoproto.nullable) = false ];

  // list of funded addresses
  repeated ollo.mint.v1.WeightedAddress funded_addresses = 8
      [ (gogoproto.nullable) = false ];

  //       // block_time_threshold defines block time threshold to prevent from any inflationary manipulation attacks
  // // it is used for maximum block duration when calculating block inflation
  // google.protobuf.Duration block_time_threshold = 3 [(gogoproto.nullable) = false, (gogoproto.stdduration) = true];

  // // inflation_schedules defines a list of inflation schedules
  // repeated InflationSchedule inflation_schedules = 4 [(gogoproto.nullable) = false];
}


// InflationSchedule defines the start and end time of the inflation period, and the amount of inflation during that
// period.
// message InflationSchedule {
//   // start_time defines the start date time for the inflation schedule
//   google.protobuf.Timestamp start_time = 1
//       [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"start_time\""];
//   // end_time defines the end date time for the inflation schedule
//   google.protobuf.Timestamp end_time = 2
//       [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"end_time\""];
//   // amount defines the total amount of inflation for the schedule
//   string amount = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
// }
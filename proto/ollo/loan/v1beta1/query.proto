syntax = "proto3";
package ollo.loan;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "ollo/loan/params.proto";
import "ollo/loan/loans.proto";
// this line is used by starport scaffolding # 1

option go_package = "ollo/x/loan/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/ollo/loan/params";
  }
  // Queries a Loans by id.
	rpc Loans(QueryGetLoansRequest) returns (QueryGetLoansResponse) {
		option (google.api.http).get = "/ollo/loan/loans/{id}";
	}

	// Queries a list of Loans items.
	rpc LoansAll(QueryAllLoansRequest) returns (QueryAllLoansResponse) {
		option (google.api.http).get = "/ollo/loan/loans";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetLoansRequest {
	uint64 id = 1;
}

message QueryGetLoansResponse {
	Loans Loans = 1 [(gogoproto.nullable) = false];
}

message QueryAllLoansRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllLoansResponse {
	repeated Loans Loans = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3

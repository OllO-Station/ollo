syntax = "proto3";
package ollo.market.v1;

/*
 *
 */

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
// this line is used by starport scaffolding # genesis/proto/import

option go_package = "github.com/ollo-station/ollo/x/market/types";

//
message EventBuyNft {
    string id = 1 [(gogoproto.moretags) = "yaml:\"id\""];
    string nft_id = 2 [(gogoproto.moretags) = "yaml:\"nft_id\""];
    string denom_id = 3 [(gogoproto.moretags) = "yaml:\"denom_id\""];
    string owner = 4
        [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "yaml:\"owner\""];
    string buyer = 5
        [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "yaml:\"buyer\""];
}

//
message EventListNft {
    string id = 1 [(gogoproto.moretags) = "yaml:\"id\""];
    string nft_id = 2 [(gogoproto.moretags) = "yaml:\"nft_id\""];
    string denom_id = 3 [(gogoproto.moretags) = "yaml:\"denom_id\""];
    string creator = 4
        [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "yaml:\"creator\""];
    string price = 5 [(gogoproto.moretags) = "yaml:\"price\""];
}

//
message EventEditNftListing {
    string id = 1 [(gogoproto.moretags) = "yaml:\"id\""];
    string nft_id = 2 [(gogoproto.moretags) = "yaml:\"nft_id\""];
    string denom_id = 3 [(gogoproto.moretags) = "yaml:\"denom_id\""];
    string creator = 4
        [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "yaml:\"creator\""];
}

//
message EventDelistNft {
    string id = 1 [(gogoproto.moretags) = "yaml:\"id\""];
    string nft_id = 2 [(gogoproto.moretags) = "yaml:\"nft_id\""];
    string denom_id = 3 [(gogoproto.moretags) = "yaml:\"denom_id\""];
    string creator = 4
        [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "yaml:\"creator\""];
}

//
message EventCreateNftAuction {
    string id = 1 [(gogoproto.moretags) = "yaml:\"id\""];
    string nft_id = 2 [(gogoproto.moretags) = "yaml:\"nft_id\""];
    string denom_id = 3 [(gogoproto.moretags) = "yaml:\"denom_id\""];
    string creator = 4
        [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "yaml:\"creator\""];
    string min_price = 5 [(gogoproto.moretags) = "yaml:\"min_price\""];
}

//
message EventCancelNftAuction {
    string auction_id = 1 [(gogoproto.moretags) = "yaml:\"auction_id\""];
    string nft_id = 2 [(gogoproto.moretags) = "yaml:\"nft_id\""];
    string denom_id = 3 [(gogoproto.moretags) = "yaml:\"denom_id\""];
    string owner = 4
        [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "yaml:\"owner\""];
}

//
message EventNftAuctionPlaceBid {
    string auction_id = 1 [(gogoproto.moretags) = "yaml:\"auction_id\""];
    string nft_id = 2 [(gogoproto.moretags) = "yaml:\"nft_id\""];
    string denom_id = 3 [(gogoproto.moretags) = "yaml:\"denom_id\""];
    string bidder = 4
        [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "yaml:\"bidder\""];
    string amount = 5 [(gogoproto.moretags) = "yaml:\"amount\""];
}

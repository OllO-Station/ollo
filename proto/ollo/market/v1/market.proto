syntax = "proto3";
package ollo.market.v1;

import "gogoproto/gogo.proto";
import "ollo/market/v1/params.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";
// this line is used by starport scaffolding # genesis/proto/import

option go_package = "github.com/ollo-station/ollo/x/market/types";

option (gogoproto.goproto_getters_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = true;

//
enum NftAuctionStatus {
  option (gogoproto.goproto_enum_prefix) = false;

  //
  NFT_AUCTION_STATUS_UNSPECIFIED = 0 [
    (gogoproto.enumvalue_customname) = "NftAuctionStatusUnspecified"
  ];
  //
  NFT_AUCTION_STATUS_INACTIVE    = 1 [
    (gogoproto.enumvalue_customname) = "NftAuctionStatusInactive"
  ];
  //
  NFT_AUCTION_STATUS_ACTIVE      = 2 [
    (gogoproto.enumvalue_customname) = "NftAuctionStatusActive"
  ];
}

//
message NftAuctionBid {
  option (gogoproto.equal) = true;

  uint64 auction_id = 1 [
    (gogoproto.moretags) = "yaml:\"auction_id\""
  ];
  string bidder = 2 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.moretags) = "yaml:\"bidder\""
  ];
  cosmos.base.v1beta1.Coin amount = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"price\""
  ];
  google.protobuf.Timestamp time = 4 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"time\""
  ];
};

//
message NftAuction {
  uint64 id = 1 [
    (gogoproto.moretags) = "yaml:\"id\""
  ];
  string nft_id = 2 [
    (gogoproto.moretags) = "yaml:\"nft_id\""
  ];
  string denom_id = 3 [
    (gogoproto.moretags) = "yaml:\"denom_id\""
  ];
  string owner = 4 [ 
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.moretags) = "yaml:\"owner\""
  ];
  cosmos.base.v1beta1.Coin start_price = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"start_price\""
  ];
  google.protobuf.Timestamp start_time = 6 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"start_time\""
  ];
  google.protobuf.Timestamp end_time = 7 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"end_time\""
  ];
}

// 
message Market {
  string id = 1;
}


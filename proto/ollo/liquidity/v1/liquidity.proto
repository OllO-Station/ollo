syntax = "proto3";
package ollo.liquidity.v1;

import "ollo/liquidity/v1/tx.proto";
import "ollo/liquidity/v1/pair.proto";
import "ollo/liquidity/v1/pool.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "ollo/x/liquidity/types";
option (gogoproto.goproto_getters_all) = false;


// DepositMsgState defines the state of deposit message that contains state
// information as it is processed in the next batch or batches.
message DepositMsgState {

  // height where this message is appended to the batch
  int64 msg_height = 1 [ (gogoproto.moretags) = "yaml:\"msg_height\"" ];

  // index of this deposit message in this liquidity pool
  uint64 msg_index = 2 [ (gogoproto.moretags) = "yaml:\"msg_index\"" ];

  // true if executed on this batch, false if not executed
  bool executed = 3 [ (gogoproto.moretags) = "yaml:\"executed\"" ];

  // true if executed successfully on this batch, false if failed
  bool succeeded = 4 [ (gogoproto.moretags) = "yaml:\"succeeded\"" ];

  // true if ready to be deleted on kvstore, false if not ready to be deleted
  bool to_be_deleted = 5 [ (gogoproto.moretags) = "yaml:\"to_be_deleted\"" ];

  // MsgDepositWithinBatch
  MsgDepositWithinBatch msg = 6 [ (gogoproto.moretags) = "yaml:\"msg\"" ];
}

// WithdrawMsgState defines the state of the withdraw message that contains
// state information as the message is processed in the next batch or batches.
message WithdrawMsgState {

  // height where this message is appended to the batch
  int64 msg_height = 1 [ (gogoproto.moretags) = "yaml:\"msg_height\"" ];

  // index of this withdraw message in this liquidity pool
  uint64 msg_index = 2 [ (gogoproto.moretags) = "yaml:\"msg_index\"" ];

  // true if executed on this batch, false if not executed
  bool executed = 3 [ (gogoproto.moretags) = "yaml:\"executed\"" ];

  // true if executed successfully on this batch, false if failed
  bool succeeded = 4 [ (gogoproto.moretags) = "yaml:\"succeeded\"" ];

  // true if ready to be deleted on kvstore, false if not ready to be deleted
  bool to_be_deleted = 5 [ (gogoproto.moretags) = "yaml:\"to_be_deleted\"" ];

  // MsgWithdrawWithinBatch
  MsgWithdrawWithinBatch msg = 6 [ (gogoproto.moretags) = "yaml:\"msg\"" ];
}

// SwapMsgState defines the state of the swap message that contains state
// information as the message is processed in the next batch or batches.
message SwapMsgState {

  // height where this message is appended to the batch
  int64 msg_height = 1 [ (gogoproto.moretags) = "yaml:\"msg_height\"" ];

  // index of this swap message in this liquidity pool
  uint64 msg_index = 2 [ (gogoproto.moretags) = "yaml:\"msg_index\"" ];

  // true if executed on this batch, false if not executed
  bool executed = 3 [ (gogoproto.moretags) = "yaml:\"executed\"" ];

  // true if executed successfully on this batch, false if failed
  bool succeeded = 4 [ (gogoproto.moretags) = "yaml:\"succeeded\"" ];

  // true if ready to be deleted on kvstore, false if not ready to be deleted
  bool to_be_deleted = 5 [ (gogoproto.moretags) = "yaml:\"to_be_deleted\"" ];

  // swap orders are cancelled when current height is equal to or higher than
  // ExpiryHeight
  int64 order_expiry_height = 6
      [ (gogoproto.moretags) = "yaml:\"order_expiry_height\"" ];

  // offer coin exchanged until now
  cosmos.base.v1beta1.Coin exchanged_offer_coin = 7 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"exchanged_offer_coin\""
  ];

  // offer coin currently remaining to be exchanged
  cosmos.base.v1beta1.Coin remaining_offer_coin = 8 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"remaining_offer_coin\""
  ];

  // reserve fee for pays fee in half offer coin
  cosmos.base.v1beta1.Coin reserved_offer_coin_fee = 9 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"reserved_offer_coin_fee\""

  ];

  // MsgSwapWithinBatch
  MsgSwapWithinBatch msg = 10 [ (gogoproto.moretags) = "yaml:\"msg\"" ];
}


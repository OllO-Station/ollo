syntax = "proto3";
package ollo.liquidity.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "ollo/liquidity/v1/order.proto";

option go_package = "github.com/ollo-station/ollo/x/liquidity/types";
option (gogoproto.goproto_getters_all) = false;


message Params {
  /* option (gogoproto.goproto_getters) = false; */
  /* option (gogoproto.goproto_stringer) = false; */

    uint32 batch_size = 1;

    uint32 tick_precision = 2;

    string fee_collector_address = 3 [
        (cosmos_proto.scalar) = "cosmos.Address",
        (gogoproto.moretags) = "yaml:\"fee_collector_address\""
    ];

    string dust_collector_address = 4 [
        (cosmos_proto.scalar) = "cosmos.Address",
        (gogoproto.moretags) = "yaml:\"dust_collector_address\""
    ];

    string min_initial_pool_coin_supply = 5 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", 
        (gogoproto.nullable) = false
    ];

    repeated cosmos.base.v1beta1.Coin pair_creation_fee = 6 [
        (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", 
        (gogoproto.nullable) = false
    ];

    repeated cosmos.base.v1beta1.Coin pool_creation_fee = 7
        [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];

    string min_initial_deposit_amount = 8 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", 
        (gogoproto.nullable) = false
    ];

    string max_price_limit_ratio = 9 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", 
        (gogoproto.nullable) = false
    ];

    uint32 max_num_market_making_order_ticks = 10;

    uint32 max_num_market_making_orders_per_pair = 11;

    google.protobuf.Duration max_order_lifespan = 12 [
        (gogoproto.stdduration) = true, 
        (gogoproto.nullable) = false
    ];

    string swap_fee_rate = 13 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", 
        (gogoproto.nullable) = false
    ];

    string withdraw_fee_rate = 14 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];

    uint64 deposit_extra_gas = 15 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Gas", (gogoproto.nullable) = false];

    uint64 withdraw_extra_gas = 16 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Gas", (gogoproto.nullable) = false];

    uint64 order_extra_gas = 17 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Gas", (gogoproto.nullable) = false];

    uint32 max_num_active_pools_per_pair = 18;
}



// DepositRequest defines a deposit request.
message DepositRequest {
    // id specifies the id for the request
    uint64 id = 1;

    // pool_id specifies the pool id
    uint64 pool_id = 2;

    // msg_height specifies the block height when the request is stored for the batch execution
    int64 msg_height = 3;

    // depositor specifies the bech32-encoded address that makes a deposit to the pool
    string depositor = 4 [
        (cosmos_proto.scalar) = "cosmos.Address",
        (gogoproto.moretags) = "yaml:\"depositor\""
    ];

    // deposit_coins specifies the amount of coins to deposit.
    repeated cosmos.base.v1beta1.Coin deposit_coins = 5
        [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];

    // accepted_coins specifies the amount of coins that are accepted.
    repeated cosmos.base.v1beta1.Coin accepted_coins = 6
        [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];

    cosmos.base.v1beta1.Coin minted_pool_coin = 7 [(gogoproto.nullable) = false];

    RequestStatus status = 8 [
        (gogoproto.moretags) = "yaml:\"status\"",
        (gogoproto.jsontag) = "status,omitempty"
    ];
}


// WithdrawRequest defines a withdraw request.
message WithdrawRequest {
    // id specifies the id for the request
    uint64 id = 1;

    // pool_id specifies the pool id
    uint64 pool_id = 2;

    // msg_height specifies the block height when the request is stored for the batch execution
    int64 msg_height = 3;

    // withdrawer specifies the bech32-encoded address that withdraws pool coin from the pool
    string withdrawer = 4 [
        (cosmos_proto.scalar) = "cosmos.Address",
        (gogoproto.moretags) = "yaml:\"withdrawer\""
    ];

    // pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
    cosmos.base.v1beta1.Coin pool_coin = 5 [(gogoproto.nullable) = false];

    // withdrawn_coins specifies the amount of coins that are withdrawn.
    repeated cosmos.base.v1beta1.Coin withdrawn_coins = 6
        [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];

    RequestStatus status = 7;
}


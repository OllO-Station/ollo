syntax = "proto3";
package ollo.liquidity.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "cosmos_proto/coin.proto";

option go_package = "ollo/x/liquidity/types";

option (gogoproto.goproto_getters_all) = false;

// Params defines the parameters for the module.
message Params {
  option (gogoproto.goproto_stringer) = false;

  PoolParams pool_params = 1;
  OrderParams order_params = 2;
  FeeParams fee_params = 3;
  MarketParams market_params = 4;
}

message OrderParams {

  google.protobuf.Duration max_lifespan = 1[ 
    (gogoproto.stdduration) = true, 
    (gogoproto.nullable) = false 
    ];

  uint64 deposit_extra_gas = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Gas",
    (gogoproto.nullable) = false
  ];

  uint64 withdraw_extra_gas = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Gas",
    (gogoproto.nullable) = false
  ];

  uint64 order_extra_gas = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Gas",
    (gogoproto.nullable) = false
  ];
}

message PoolParams {

  string min_init_pool_supply = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  string min_init_pool_deposit = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  string max_price_ratio = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

message MarketParams {
  uint32 precision = 1;

  uint32 batch_size = 2;

  uint32 max_amm_ticks = 3;
}

message FeeParams {

  string fee_collecter_addr = 1;

  string dust_collector_addr = 2;

  string swap_rate = 3
      [ (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec" ];
  string withdraw_rate = 4
      [ (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec" ];

  repeated cosmos.base.v1beta1.Coin pair_init_fee = 5 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];

  repeated cosmos.base.v1beta1.Coin pool_init_fee = 6 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
}

syntax = "proto3";
package ollo.vault.v1;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "ollo/vault/v1/vault.proto";

option go_package = "github.com/ollo-station/ollo/x/vault/types";

message MsgCreateRequest {
    string from = 1 [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "yaml:\"from\""];
    string amount_in = 2 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
        (gogoproto.moretags) = "yaml:\"amount_in\"",
        (gogoproto.nullable) = false
    ];
    string amount_out = 3 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
        (gogoproto.moretags) = "yaml:\"amount_out\"",
        (gogoproto.nullable) = false
    ];
}

message MsgCreateResponse {}

message MsgDepositRequest {
    string from = 1 [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "yaml:\"from\""];
    uint64 user_vault_id = 2 [(gogoproto.moretags) = "yaml:\"user_vault_id\""];
    string amount = 3 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
        (gogoproto.moretags) = "yaml:\"amount\"",
        (gogoproto.nullable) = false
    ];
}

message MsgDepositResponse {}

message MsgWithdrawRequest {
    string from = 1 [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "yaml:\"from\""];
    uint64 user_vault_id = 2 [(gogoproto.moretags) = "yaml:\"user_vault_id\""];
    string amount = 3 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
        (gogoproto.moretags) = "yaml:\"amount\"",
        (gogoproto.nullable) = false
    ];
}

message MsgWithdrawResponse {}

message MsgDrawRequest {
    string from = 1 [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "yaml:\"from\""];
    uint64 user_vault_id = 2 [(gogoproto.moretags) = "yaml:\"user_vault_id\""];
    string amount = 3 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
        (gogoproto.moretags) = "yaml:\"amount\"",
        (gogoproto.nullable) = false
    ];
}

message MsgDrawResponse {}

message MsgRepayRequest {
    string from = 1 [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "yaml:\"from\""];
    uint64 user_vault_id = 2 [(gogoproto.moretags) = "yaml:\"user_vault_id\""];
    string amount = 3 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
        (gogoproto.moretags) = "yaml:\"amount\"",
        (gogoproto.nullable) = false
    ];
}

message MsgRepayResponse {}

message MsgCloseRequest {
    string from = 1 [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "yaml:\"from\""];
    uint64 user_vault_id = 2 [(gogoproto.moretags) = "yaml:\"user_vault_id\""];
}

message MsgCloseResponse {}
service Msg {
    rpc MsgCreate(MsgCreateRequest) returns (MsgCreateResponse);
    rpc MsgDeposit(MsgDepositRequest) returns (MsgDepositResponse);
    rpc MsgWithdraw(MsgWithdrawRequest) returns (MsgWithdrawResponse);
    rpc MsgDraw(MsgDrawRequest) returns (MsgDrawResponse);
    rpc MsgRepay(MsgRepayRequest) returns (MsgRepayResponse);
    rpc MsgClose(MsgCloseRequest) returns (MsgCloseResponse);
}

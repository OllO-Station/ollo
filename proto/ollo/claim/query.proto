syntax = "proto3";
package ollo.claim;

import "ollo/claim/params.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "ollo/claim/claim.proto";

option go_package = "ollo/x/claim/types";

// Query defines the gRPC querier service.
service Query {

  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/ollo/claim/params";
  }
  // Airdrops returns all airdrops.
  rpc Airdrops(QueryAirdropsRequest) returns (QueryAirdropsResponse) {
    option (google.api.http).get = "/ollo/claim/airdrops";
  }

  // Airdrop returns the specific airdrop.
  rpc Airdrop(QueryAirdropRequest) returns (QueryAirdropResponse) {
    option (google.api.http).get = "/ollo/claim/airdrops/{airdrop_id}";
  }

  // ClaimRecord returns the claim record for the recipient address.
  rpc ClaimRecord(QueryClaimRecordRequest) returns (QueryClaimRecordResponse) {
    option (google.api.http).get = "/ollo/claim/airdrops/{airdrop_id}/claim_records/{recipient}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryAirdropsRequest is request type for the Query/Airdrops RPC method.
message QueryAirdropsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryAirdropsResponse is response type for the Query/Airdrops RPC method.
message QueryAirdropsResponse {
  repeated Airdrop airdrops = 1 [(gogoproto.nullable) = false];

  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryAirdropRequest is request type for the Query/Airdrop RPC method.
message QueryAirdropRequest {
  uint64 airdrop_id = 1;
}

// QueryAirdropResponse is response type for the Query/Airdrop RPC method.
message QueryAirdropResponse {
  Airdrop airdrop = 1 [(gogoproto.nullable) = false];
}

// QueryClaimRecordRequest is request type for the Query/ClaimRecord RPC method.
message QueryClaimRecordRequest {
  uint64 airdrop_id = 1;

  string recipient = 2;
}

// QueryClaimRecordResponse is response type for the Query/ClaimRecord RPC method.
message QueryClaimRecordResponse {
  ClaimRecord claim_record = 1 [(gogoproto.nullable) = false];
}
syntax = "proto3";
package ollo.claim.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "ollo/claim/v1/params.proto";
import "ollo/claim/v1/claim.proto";
import "ollo/claim/v1/goal.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";


option go_package = "ollo/x/claim/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/ollo/claim/v1/params";
  }

  // Queries a ClaimRecord by address.
  rpc ClaimRecord(QueryGetClaimRecordRequest)
      returns (QueryGetClaimRecordResponse) {
    option (google.api.http).get =
        "/ollo/claim/v1/claim_record/{address}";
  }

  // Queries a list of ClaimRecord items.
  rpc ClaimRecordAll(QueryAllClaimRecordRequest)
      returns (QueryAllClaimRecordResponse) {
    option (google.api.http).get = "/ollo/claim/v1/claim_record";
  }

  // Queries a Goal by ID.
  rpc Goal(QueryGetGoalRequest) returns (QueryGetGoalResponse) {
    option (google.api.http).get = "/ollo/claim/v1/goal/{goalID}";
  }

  // Queries a list of Goal items.
  rpc GoalAll(QueryAllGoalRequest) returns (QueryAllGoalResponse) {
    option (google.api.http).get = "/ollo/claim/v1/goal";
  }

  // Queries a AirdropSupply by index.
  rpc AirdropSupply(QueryGetAirdropSupplyRequest)
      returns (QueryGetAirdropSupplyResponse) {
    option (google.api.http).get = "/ollo/claim/v1/airdrop_supply";
  }
  // Queries a InitialClaim by index.
  rpc InitialClaim(QueryGetInitialClaimRequest)
      returns (QueryGetInitialClaimResponse) {
    option (google.api.http).get = "/ollo/claim/v1/initial_claim";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryGetClaimRecordRequest {
  string address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message QueryGetClaimRecordResponse {
  ClaimRecord claimRecord = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllClaimRecordRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllClaimRecordResponse {
  repeated ClaimRecord claimRecord = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetGoalRequest { uint64 goalID = 1; }

message QueryGetGoalResponse {
  Goal Goal = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllGoalRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllGoalResponse {
  repeated Goal Goal = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetAirdropSupplyRequest {}

message QueryGetAirdropSupplyResponse {
  cosmos.base.v1beta1.Coin AirdropSupply = 1 [ (gogoproto.nullable) = false ];
}
message QueryGetInitialClaimRequest {}

message QueryGetInitialClaimResponse {
  InitialClaim InitialClaim = 1 [ (gogoproto.nullable) = false ];
}
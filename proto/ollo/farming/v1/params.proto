syntax = "proto3";

package ollo.farming.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "ollo/farming/v1/farming.proto";

option go_package = "ollo/x/farming/types";


// Params defines the set of params for the farming module.
message Params {
  // option (gogoproto.goproto_getters)  = false;
  // option (gogoproto.goproto_stringer) = false;

  // private_plan_creation_fee specifies the fee for plan creation
  // this fee prevents from spamming and is collected in the community pool
  repeated cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [
    (gogoproto.moretags)     = "yaml:\"private_plan_creation_fee\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable)     = false
  ];

  // next_epoch_days is the epoch length in number of days
  // it updates internal state called CurrentEpochDays that is used to process
  // staking and reward distribution in end blocker
  uint32 next_epoch_days = 2 [(gogoproto.moretags) = "yaml:\"next_epoch_days\""];

  // farming_fee_collector is the module account address to collect fees within the farming module
  string farming_fee_collector = 3 [(gogoproto.moretags) = "yaml:\"farming_fee_collector\""];

  // delayed_staking_gas_fee is used to impose gas fee for the delayed staking
  uint64 delayed_staking_gas_fee = 4 [
    (gogoproto.moretags)   = "yaml:\"delayed_staking_gas_fee\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Gas",
    (gogoproto.nullable)   = false
  ];

  // max_num_private_plans is the maximum number of active private plans
  uint32 max_num_private_plans = 5 [(gogoproto.moretags) = "yaml:\"max_num_private_plans\""];
}
